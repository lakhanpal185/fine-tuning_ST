Discussion Title: Which front-end javascript framework is best?

1. Which front-end javascript framework is best?
1.1. [Angular](https://angular.io/) is the best.
1.1.1. Con: Angular uses two-way data binding, which becomes exponentially complex in large apps.
1.1.2. Pro: By standardizing on rxjs \(or ngrx\) and promises in general, Angular avoids the [callback hell](http://callbackhell.com/) other frameworks are susceptible to.
1.1.3. Con: Angular has better structure.
1.1.4. Pro: Angular uses Typescript
1.1.4.1. Pro: Typescript is supported by Microsoft, a major software company.
1.1.4.2. Pro: Angular is supported by Google and used for their own applications.
1.1.4.3. Con: High learning curve.
1.1.4.3.1. Con: Typescript is easy to learn and, as a superset of Javascript, makes integration with existing paradigms easy.
1.1.4.4. Con: Typescript can be used for many frameworks.
1.1.4.5. Pro: Typescript is superior to Javascript.
1.1.4.5.1. Con: JavaScript is the native language of browsers
1.1.4.5.2. Con: TypeScript is an incomplete abstraction of JavaScript. It tries to hide the dynamic nature of JavaScript, but cannot do this 100%
1.1.4.5.3. Pro: Type safety improves both the reliability and security of applications.
1.1.4.5.4. Pro: Typescript's scoping fixes the confusing scoping issues of Javascript.
1.1.4.5.5. Pro: -> See discussion #16664: TypeScript is better than JavaScript for large projects
1.2. [React](https://reactjs.org/) is the best
1.2.1. Con: Vue is supported by Facebook, which is not a software company.
1.2.2. Pro: React is supported by Facebook and used for their production applications.
1.2.3. Con: React is very limited in scope. It is actually not a framework, just a library for easier UI manipulation.
1.2.3.1. Pro: The limited scope of React makes it hard to setup a complete application architecture because of the multitude of choices available.
1.2.3.1.1. Con: Initiatives like [create-react-app](https://github.com/facebookincubator/create-react-app) allow to get a complete application architecture with opinionated and documented choices.
1.2.4. Pro: React scales well with lots of data.
1.2.5. Pro: React has good support for TypeScript
1.2.6. Pro: React allows for HTML quotes.
1.2.7. Pro: On a global scale there's more [interest](https://da-14.com/blog/reactjs-vs-angular-comparison-which-better) in React than in Angular.
1.2.8. Pro: React is easy to learn.
1.2.8.1. Pro: React has a simple core concept: The View is a function of the Data.
1.3. [AngularJS](https://angularjs.org/) is the best.
1.4. [Meteor](https://www.meteor.com/) is the best.
1.5. [Vue](https://vuejs.org/) is the best.
1.5.1. Pro: Vue is easy to learn.
1.5.1.1. Pro: It's simplicity was seen by [some](https://medium.com/js-dojo/vue-js-is-easier-to-learn-than-jquery-abbbb9c12cf8) as the most striking benefit.
1.5.2. Con: Vue is not supported by a major software company.
1.6. [Polymer](https://www.polymer-project.org/) is the best.
1.7. [Backbone](http://backbonejs.org/) is the best.
1.8. [Aurelia](http://aurelia.io/) is the best