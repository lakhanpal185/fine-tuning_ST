Discussion Title: Which container orchestrator platform to use?

1. Which container orchestrator platform to use?
1.1. [Microsoft Azure Service Fabric](https://azure.microsoft.com/en-us/services/service-fabric/)
1.1.1. Pro: Supports both stateless and stateful services
1.1.2. Con: Although some parts are open-source the integrated parts are still proprietary
1.1.2.1. Pro: It is better to use a fully open-source instrument.
1.1.3. Pro: Has 'simulator' available to develop and debug locally on dev-machine
1.1.4. Pro: Used by Microsoft internally to power some key services offered in Azure, such as CosmosDB, EventHubs, Cortana and others
1.1.5. Pro: Supports running on-prem as well as fully managed in Azure
1.1.6. Pro: Supports several programming models, such as native binaries, containers and using it's SDK as program model which allows usage of reliable storage APIs
1.1.7. Pro: Runs on Windows and Linux
1.1.7.1. Pro: This allows for greatest flexibility of usage.
1.2. [Kubernetes](https://kubernetes.io/)
1.2.1. Pro: Supports stateless and stateful services
1.2.2. Pro: Runs in any public cloud as fully managed service. [Azure AKS](https://azure.microsoft.com/en-us/services/kubernetes-service/), [Google Cloud](https://cloud.google.com/kubernetes-engine/), [AWS EKS](https://aws.amazon.com/eks/)
1.2.3. Pro: Kubernetes version 1.5 introduced Alpha support for Windows Server Containers based on the Windows Server 2016 operating system
1.3. [Docker Swarm](https://docs.docker.com/engine/swarm/)
1.4. [Mesosphere](https://mesosphere.com/)